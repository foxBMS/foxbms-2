#!/usr/bin/env python3
#
# Copyright (c) 2010 - 2025, Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V.
# All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# We kindly request you to use one or more of the following phrases to refer to
# foxBMS in your hardware, software, documentation or advertising materials:
#
# - "This product uses parts of foxBMS®"
# - "This product includes parts of foxBMS®"
# - "This product is derived from foxBMS®"


"""Build the TI DP83869 driver in case TCP support is enabled; otherwise a
dummy function is compiled."""


def build(bld):
    """Build the TI DP83869 driver in case TCP support is enabled; otherwise a
    dummy function is compiled."""
    includes = [
        "../../main/include",
    ]
    if bld.env.TCP_SUPPORT:
        source = ["dp83869.c"]
        includes.extend(
            [
                "../../application/config",
                "../../engine/config",
                "../../engine/database",
                "../../task/os",
                "../config",
                "../io",
                "../mcu",
            ]
        )
        includes.extend(bld.env.INCLUDES_RTOS)
    else:
        code = (
            '#include "fstd_types.h"\n\n'
            "#include <stdint.h>\n\n"
            "STD_RETURN_TYPE_e PHY_Initialize(uint32_t mdioBaseAddress) {\n"
            "    (void)mdioBaseAddress;\n"
            "    return STD_OK;\n"
            "}\n"
        )
        dummy_phy = bld.path.find_or_declare("dummy-phy.c")
        try:
            if dummy_phy.h_file().hex() != "27da261929a15a77f310bf7722052fd3":
                raise FileNotFoundError
        except FileNotFoundError:
            dummy_phy.parent.mkdir()
            dummy_phy.write(code)
        source = [dummy_phy]
    cflags = bld.env.CFLAGS_FOXBMS
    target = f"{bld.env.APPNAME.lower()}-objects-phy"
    bld.objects(
        source=source,
        includes=includes,
        cflags=cflags,
        target=target,
    )
