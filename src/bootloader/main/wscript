#!/usr/bin/env python3
#
# Copyright (c) 2010 - 2025, Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V.
# All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# We kindly request you to use one or more of the following phrases to refer to
# foxBMS in your hardware, software, documentation or advertising materials:
#
# - "This product uses parts of foxBMS®"
# - "This product includes parts of foxBMS®"
# - "This product is derived from foxBMS®"

"""Builds the bootloader main binary"""


def build(bld):
    """runs the main build by linking the previously built libraries
    and the objects built within this wscript"""
    target = f"{bld.env.APPNAME.lower()}-bootloader"
    source = [
        "fassert.c",
        "fstartup.c",
        "intvecs_init.asm",
        "intvecs.asm",
    ]
    includes = [
        "include",
        "../driver/can",
        "../driver/config",
        "../driver/rti",
        "../engine/boot",
        "../../version",
    ]
    use = [
        f"{bld.env.APPNAME.lower()}-bootloader-driver-can-objects",
        f"{bld.env.APPNAME.lower()}-bootloader-driver-crc-objects",
        f"{bld.env.APPNAME.lower()}-bootloader-driver-crc-vendor-objects",
        f"{bld.env.APPNAME.lower()}-bootloader-driver-flash-objects",
        f"{bld.env.APPNAME.lower()}-bootloader-driver-foxmath-objects",
        f"{bld.env.APPNAME.lower()}-bootloader-driver-rti-objects",
        f"{bld.env.APPNAME.lower()}-bootloader-driver-io-objects",
        f"{bld.env.APPNAME.lower()}-bootloader-engine-boot-objects",
        f"{bld.env.APPNAME.lower()}-bootloader-engine-can-objects",
        f"{bld.env.APPNAME.lower()}-portable",
        f"{bld.env.APPNAME.lower()}-bootloader-hal",
    ]

    # setup specifically whether the bootloader or the target tests shall be built
    if bld.options.target_test:
        bld.recurse("../../../tests/unit-hw")
        target += "-target-tests"
        use.append(f"{bld.env.APPNAME.lower()}-bootloader-target-test-objects")
    else:
        source.append("main.c")
        includes.extend(
            [
                "../engine/can",
                "../driver/crc",
                "../driver/flash",
                "../driver/foxmath",
                "../driver/rti",
            ]
        )
        use.append(f"{bld.env.APPNAME.lower()}-bootloader-driver-dma-objects")

    bld.tiprogram(
        source=source,
        linker_script="bootloader.cmd",
        includes=includes,
        use=use,
        target=target,
    )
